// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef RenderingInterface_h
#define RenderingInterface_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include "RenderingUI.h"
#include <FL/Fl_Button.H>
#include <FL/Fl_File_Chooser.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Progress.H>
#include <FL/Fl_Value_Output.H>

class RenderingInterface {
public:
  Fl_Double_Window* make_window();
  Fl_Double_Window *m_renderWindow;
private:
  void cb_Load_i(Fl_Button*, void*);
  static void cb_Load(Fl_Button*, void*);
public:
  Fl_Output *m_txtStatus;
  Fl_Choice *m_iRenderType;
  static Fl_Menu_Item menu_m_iRenderType[];
private:
  void cb_Scanline_i(Fl_Menu_*, void*);
  static void cb_Scanline(Fl_Menu_*, void*);
  void cb_Ray_i(Fl_Menu_*, void*);
  static void cb_Ray(Fl_Menu_*, void*);
  void cb_Path_i(Fl_Menu_*, void*);
  static void cb_Path(Fl_Menu_*, void*);
public:
  Fl_Value_Input *m_iWidth;
  Fl_Value_Input *m_iHeight;
  Fl_Progress *m_progress;
  Fl_Value_Output *m_iTime;
  Fl_Button *m_bRenderOn;
private:
  void cb_m_bRenderOn_i(Fl_Button*, void*);
  static void cb_m_bRenderOn(Fl_Button*, void*);
public:
  RenderingInterface();
private:
  RenderingUI renderingUI;
public:
  UIInterface * getUI();
private:
  std::string strSceneName;
};
#endif
